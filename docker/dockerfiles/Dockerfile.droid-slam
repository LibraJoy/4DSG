# DROID-SLAM Container - CUDA 11.8 + PyTorch 1.10
FROM nvidia/cuda:11.8.0-devel-ubuntu20.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_HOME=/usr/local/cuda-11.8

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.9 \
    python3.9-dev \
    python3-pip \
    python3.9-distutils \
    git \
    wget \
    curl \
    build-essential \
    cmake \
    gcc-10 \
    g++-10 \
    libsuitesparse-dev \
    && rm -rf /var/lib/apt/lists/*

# Set python3.9 as default and upgrade pip
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 && \
    python3 -m pip install --upgrade pip

# Install miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh
ENV PATH="/opt/conda/bin:$PATH"

# Configure conda and accept Terms of Service
RUN conda config --set always_yes yes --set changeps1 no && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r

# Create conda environment for DROID-SLAM
RUN conda create -n droidenv python=3.9 -y
SHELL ["conda", "run", "-n", "droidenv", "/bin/bash", "-c"]

# Install PyTorch 1.10 with CUDA 11.3 support
RUN conda install pytorch=1.10 torchvision torchaudio cudatoolkit=11.3 -c pytorch -y

# Install remaining dependencies
RUN conda install suitesparse -c conda-forge -y && \
    pip install open3d==0.15.2 \
                scipy \
                opencv-python==4.7.0.72 \
                matplotlib \
                pyyaml==6.0.2 \
                tensorboard \
                evo --upgrade --no-binary evo \
                gdown \
                numpy==1.23.0 \
                numpy-quaternion==2023.0.4

# Download and install torch-scatter
RUN wget https://data.pyg.org/whl/torch-1.10.0%2Bcu113/torch_scatter-2.0.9-cp39-cp39-linux_x86_64.whl && \
    pip install torch_scatter-2.0.9-cp39-cp39-linux_x86_64.whl && \
    rm torch_scatter-2.0.9-cp39-cp39-linux_x86_64.whl

# Set working directory
WORKDIR /app

# Copy DROID-SLAM source code
COPY DovSG/third_party/DROID-SLAM ./DROID-SLAM/

# Set environment variables for compilation
ENV CC=/usr/bin/gcc-10
ENV CXX=/usr/bin/g++-10

# Install DROID-SLAM
WORKDIR /app/DROID-SLAM
RUN conda run -n droidenv python setup.py install

# Create data directories
WORKDIR /app
RUN mkdir -p data_example checkpoints shared_data

# Default activation of conda environment
RUN conda init bash && \
    echo "conda activate droidenv" >> ~/.bashrc
SHELL ["/bin/bash", "--login", "-c"]

CMD ["conda", "run", "-n", "droidenv", "bash"]