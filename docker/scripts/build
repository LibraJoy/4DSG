#!/bin/bash

# build - Build Docker containers for DovSG development

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/common.sh"

check_directory
check_docker

echo " Docker Container Builder"
echo "==========================="

# Parse command line arguments
BUILD_TARGET="all"
NO_CACHE=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --droid-slam)
            BUILD_TARGET="droid-slam"
            shift
            ;;
        --dovsg)
            BUILD_TARGET="dovsg"
            shift
            ;;
        --no-cache)
            NO_CACHE=true
            shift
            ;;
        -h|--help)
            echo "Usage: ./scripts/build [options]"
            echo ""
            echo "Options:"
            echo "  --droid-slam    Build only DROID-SLAM container"
            echo "  --dovsg         Build only DovSG container"
            echo "  --no-cache      Build without using cache (slower but clean)"
            echo "  -h, --help      Show this help message"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Build containers based on target
if [ "$BUILD_TARGET" = "all" ]; then
    if [ "$NO_CACHE" = true ]; then
        echo " Building both containers without cache (this will take longer)..."
        docker compose build --no-cache
    else
        echo " Building both containers (30-60 minutes)..."
        docker compose build
    fi
    echo -e " ${GREEN}Both containers built successfully!${NC}"
elif [ "$BUILD_TARGET" = "droid-slam" ]; then
    if [ "$NO_CACHE" = true ]; then
        echo " Building DROID-SLAM container without cache..."
        docker compose build --no-cache droid-slam
    else
        echo " Building DROID-SLAM container (15-20 minutes)..."
        docker compose build droid-slam
    fi
    echo -e " ${GREEN}DROID-SLAM container built successfully!${NC}"
elif [ "$BUILD_TARGET" = "dovsg" ]; then
    if [ "$NO_CACHE" = true ]; then
        echo " Building DovSG container without cache..."
        docker compose build --no-cache dovsg
    else
        echo " Building DovSG container (30-45 minutes)..."
        docker compose build dovsg
    fi
    echo -e " ${GREEN}DovSG container built successfully!${NC}"
fi

echo ""
echo "Next step: ./scripts/start"